#include <iostream>
#include <windows.h>
#include <conio.h>
using namespace std;
void printPlayer(char maze[][50], int &pX, int &pY);
void printEnemy(char maze[][50], int &eX, int &eY);
void printboard(char maze[][50], int &pX, int &pY, int &eX, int &eY, int &ix, int &iy);
void eraseplayer(char maze[][50], int pX, int pY);
void moveplayerright(char maze[][50], int &pX, int &pY);
void moveplayerleft(char maze[][50], int &pX, int &pY);
void moveEnemy(char maze[][50], string direction, int &eX, int &eY);
void eraseEnemy(char maze[][50], int eX, int eY);
string changeDirection(string direction, int &eX, int &eY);
string direction = "right";
void fire(char maze[][50], int &ix, int &iy);
void erasefire(char maze[][50], int &ix, int &iy);
void movefire(char maze[][50], int &ix, int &iy);

main()
{
	int pX;
	int pY;
	int eX;
	int eY;
	int ix;
	int iy;

	char maze[50][50] = {
		{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'p', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
		{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' }
	};

	printboard(maze, pX, pY, eX, eY, ix, iy);
	while (true)
	{
		if (GetAsyncKeyState(VK_RIGHT))
		{
			moveplayerright(maze, pX, pY);
		}

		if (GetAsyncKeyState(VK_LEFT))
		{
			moveplayerleft(maze, pX, pY);
		}

		if (GetAsyncKeyState(VK_SPACE))
		{
			int count = 10;
			ix = count;
			iy = count;
			movefire(maze, ix, iy);
			count++;
		}

		moveEnemy(maze, direction, eX, eY);
		direction = changeDirection(direction, eX, eY);
	}
}

void printEnemy(char maze[][50], int &eX, int &eY)
{
	maze[eX][eY + 1] = ' ';
	maze[eX][eY + 2] = ' ';
	maze[eX][eY + 3] = '/';
	maze[eX][eY + 4] = '\\';
	maze[eX][eY + 5] = ' ';
	maze[eX][eY + 6] = ' ';
	maze[eX][eY + 7] = ' ';
	maze[eX + 1][eY + 1] = ' ';
	maze[eX + 1][eY + 2] = ' ';
	maze[eX + 1][eY + 3] = '/';
	maze[eX + 1][eY + 4] = '\\';
	maze[eX + 1][eY + 5] = ' ';
	maze[eX + 1][eY + 6] = ' ';
	maze[eX + 1][eY + 7] = ' ';
	maze[eX + 2][eY + 1] = ' ';
	maze[eX + 2][eY + 2] = '/';
	maze[eX + 2][eY + 3] = ' ';
	maze[eX + 2][eY + 4] = ' ';
	maze[eX + 2][eY + 5] = '\\';
	maze[eX + 2][eY + 6] = ' ';
	maze[eX + 2][eY + 7] = ' ';
	maze[eX + 3][eY + 1] = '(';
	maze[eX + 3][eY + 2] = ' ';
	maze[eX + 3][eY + 3] = '0';
	maze[eX + 3][eY + 4] = '0';
	maze[eX + 3][eY + 5] = ' ';
	maze[eX + 3][eY + 6] = ')';
	maze[eX + 3][eY + 7] = ' ';
	maze[eX + 4][eY + 1] = '|';
	maze[eX + 4][eY + 2] = '_';
	maze[eX + 4][eY + 3] = '_';
	maze[eX + 4][eY + 4] = '_';
	maze[eX + 4][eY + 5] = '_';
	maze[eX + 4][eY + 6] = '|';
	maze[eX + 4][eY + 7] = ' ';
	maze[eX + 5][eY + 1] = ' ';
	maze[eX + 5][eY + 2] = ' ';
	maze[eX + 5][eY + 3] = '|';
	maze[eX + 5][eY + 4] = '|';
	maze[eX + 5][eY + 5] = ' ';
	maze[eX + 5][eY + 6] = ' ';
	maze[eX + 5][eY + 7] = ' ';
}

void eraseEnemy(char maze[][50], int eX, int eY)
{
	maze[eX][eY + 1] = ' ';
	maze[eX][eY + 2] = ' ';
	maze[eX][eY + 3] = ' ';
	maze[eX][eY + 4] = ' ';
	maze[eX][eY + 5] = ' ';
	maze[eX][eY + 6] = ' ';
	maze[eX][eY + 7] = ' ';
	maze[eX + 1][eY + 1] = ' ';
	maze[eX + 1][eY + 2] = ' ';
	maze[eX + 1][eY + 3] = ' ';
	maze[eX + 1][eY + 4] = ' ';
	maze[eX + 1][eY + 5] = ' ';
	maze[eX + 1][eY + 6] = ' ';
	maze[eX + 1][eY + 7] = ' ';
	maze[eX + 2][eY + 1] = ' ';
	maze[eX + 2][eY + 2] = ' ';
	maze[eX + 2][eY + 3] = ' ';
	maze[eX + 2][eY + 4] = ' ';
	maze[eX + 2][eY + 5] = ' ';
	maze[eX + 2][eY + 6] = ' ';
	maze[eX + 2][eY + 7] = ' ';
	maze[eX + 3][eY + 1] = ' ';
	maze[eX + 3][eY + 2] = ' ';
	maze[eX + 3][eY + 3] = ' ';
	maze[eX + 3][eY + 4] = ' ';
	maze[eX + 3][eY + 5] = ' ';
	maze[eX + 3][eY + 6] = ' ';
	maze[eX + 3][eY + 7] = ' ';
	maze[eX + 4][eY + 1] = ' ';
	maze[eX + 4][eY + 2] = ' ';
	maze[eX + 4][eY + 3] = ' ';
	maze[eX + 4][eY + 4] = ' ';
	maze[eX + 4][eY + 5] = ' ';
	maze[eX + 4][eY + 6] = ' ';
	maze[eX + 4][eY + 7] = ' ';
	maze[eX + 5][eY + 1] = ' ';
	maze[eX + 5][eY + 2] = ' ';
	maze[eX + 5][eY + 3] = ' ';
	maze[eX + 5][eY + 4] = ' ';
	maze[eX + 5][eY + 5] = ' ';
	maze[eX + 5][eY + 6] = ' ';
	maze[eX + 5][eY + 7] = ' ';
}

void printPlayer(char maze[][50], int &pX, int &pY)
{
	maze[pX][pY + 1] = '-';
	maze[pX][pY + 2] = '-';
	maze[pX][pY + 3] = '-';
	maze[pX][pY + 4] = '-';
	maze[pX][pY + 5] = '-';
	maze[pX][pY + 6] = '-';
	maze[pX][pY + 7] = '-';
	maze[pX + 1][pY] = '(';
	maze[pX + 1][pY + 7] = ')';
	maze[pX + 2][pY] = '|';
	maze[pX + 2][pY + 1] = ' ';
	maze[pX + 2][pY + 2] = ' ';
	maze[pX + 2][pY + 3] = '^';
	maze[pX + 2][pY + 4] = '^';
	maze[pX + 2][pY + 5] = ' ';
	maze[pX + 2][pY + 6] = ' ';
	maze[pX + 2][pY + 7] = '|';
	maze[pX + 3][pY] = '|';
	maze[pX + 3][pY + 1] = ' ';
	maze[pX + 3][pY + 2] = ' ';
	maze[pX + 3][pY + 3] = 'u';
	maze[pX + 3][pY + 5] = ' ';
	maze[pX + 3][pY + 6] = ' ';
	maze[pX + 3][pY + 7] = '|';
	maze[pX + 4][pY] = '|';
	maze[pX + 4][pY + 1] = '_';
	maze[pX + 4][pY + 2] = '_';
	maze[pX + 4][pY + 3] = '_';
	maze[pX + 4][pY + 4] = '_';
	maze[pX + 4][pY + 5] = '_';
	maze[pX + 4][pY + 6] = '_';
	maze[pX + 4][pY + 7] = '|';
	maze[pX + 5][pY] = ' ';
	maze[pX + 5][pY + 1] = ' ';
	maze[pX + 5][pY + 2] = '|';
	maze[pX + 5][pY + 3] = ' ';
	maze[pX + 5][pY + 4] = '|';
	maze[pX + 5][pY + 5] = ' ';
	maze[pX + 5][pY + 6] = ' ';
	maze[pX + 5][pY + 7] = ' ';
	maze[pX + 6][pY] = ' ';
	maze[pX + 6][pY + 1] = ' ';
	maze[pX + 6][pY + 2] = '|';
	maze[pX + 6][pY + 3] = '_';
	maze[pX + 6][pY + 4] = '|';
	maze[pX + 6][pY + 5] = ' ';
	maze[pX + 6][pY + 6] = ' ';
	maze[pX + 6][pY + 7] = ' ';

}

void eraseplayer(char maze[][50], int pX, int pY)
{
	maze[pX][pY] = ' ';
	maze[pX][pY + 1] = ' ';
	maze[pX][pY + 2] = ' ';
	maze[pX][pY + 3] = ' ';
	maze[pX][pY + 4] = ' ';
	maze[pX][pY + 5] = ' ';
	maze[pX][pY + 6] = ' ';
	maze[pX][pY + 7] = ' ';
	maze[pX + 1][pY] = ' ';
	maze[pX + 1][pY + 7] = ' ';
	maze[pX + 2][pY] = ' ';
	maze[pX + 2][pY + 1] = ' ';
	maze[pX + 2][pY + 2] = ' ';
	maze[pX + 2][pY + 3] = ' ';
	maze[pX + 2][pY + 4] = ' ';
	maze[pX + 2][pY + 5] = ' ';
	maze[pX + 2][pY + 6] = ' ';
	maze[pX + 2][pY + 7] = ' ';
	maze[pX + 3][pY] = ' ';
	maze[pX + 3][pY + 1] = ' ';
	maze[pX + 3][pY + 2] = ' ';
	maze[pX + 3][pY + 3] = ' ';
	maze[pX + 3][pY + 5] = ' ';
	maze[pX + 3][pY + 6] = ' ';
	maze[pX + 3][pY + 7] = ' ';
	maze[pX + 4][pY] = ' ';
	maze[pX + 4][pY + 1] = ' ';
	maze[pX + 4][pY + 2] = ' ';
	maze[pX + 4][pY + 3] = ' ';
	maze[pX + 4][pY + 4] = ' ';
	maze[pX + 4][pY + 5] = ' ';
	maze[pX + 4][pY + 6] = ' ';
	maze[pX + 4][pY + 7] = ' ';
	maze[pX + 5][pY] = ' ';
	maze[pX + 5][pY + 1] = ' ';
	maze[pX + 5][pY + 2] = ' ';
	maze[pX + 5][pY + 3] = ' ';
	maze[pX + 5][pY + 4] = ' ';
	maze[pX + 5][pY + 5] = ' ';
	maze[pX + 5][pY + 6] = ' ';
	maze[pX + 5][pY + 7] = ' ';
	maze[pX + 6][pY] = ' ';
	maze[pX + 6][pY + 1] = ' ';
	maze[pX + 6][pY + 2] = ' ';
	maze[pX + 6][pY + 3] = ' ';
	maze[pX + 6][pY + 4] = ' ';
	maze[pX + 6][pY + 5] = ' ';
	maze[pX + 6][pY + 6] = ' ';
	maze[pX + 6][pY + 7] = ' ';
}

void printboard(char maze[][50], int &pX, int &pY, int &eX, int &eY, int &ix, int &iy)
{
	for (int i = 0; i < 50; i++)
	{
		for (int j = 0; j < 50; j++)
		{
			if (maze[i][j] == 'p')
			{
				pX = i;
				pY = j;
				printPlayer(maze, pX, pY);
			}
			else if (maze[i][j] == 'e')
			{
				eX = i;
				eY = j;
				printEnemy(maze, eX, eY);
			}
			else if (maze[i][j] == 'i')
			{
				ix = i;
				iy = j;
				fire(maze, ix, iy);
			}
			else
			{
				cout << maze[i][j];
			}
		}

		cout << endl;
	}
}

void moveplayerright(char maze[][50], int &pX, int &pY)
{
	if (((maze[pX + 7][pY]) == ' ') && (maze[pX + 7][pY] != '#'))
	{
		eraseplayer(maze, pX, pY);
		system("cls");
		pY = pY + 1;

		printPlayer(maze, pX, pY);
		for (int i = 0; i < 50; i++)

		{

			for (int j = 0; j < 50; j++)
			{
				cout << maze[i][j];
			}

			cout << endl;
		}
	}
}

void moveplayerleft(char maze[][50], int &pX, int &pY)
{
	if (((maze[pX][pY + 8]) == ' ') && (maze[pX][pY + 8] != '#'))
	{
		eraseplayer(maze, pX, pY);
		system("cls");
		pY = pY - 1;

		printPlayer(maze, pX, pY);
		for (int i = 0; i < 50; i++)

		{

			for (int j = 0; j < 50; j++)
			{
				cout << maze[i][j];
			}

			cout << endl;
		}
	}
}

string changeDirection(string direction, int &eX, int &eY)
{
	if (direction == "right" && eY >= 10)
	{
		direction = "left";
	}

	if (direction == "left" && eY <= 2)
	{
		direction = "right";
	}

	return direction;
}

void moveEnemy(char maze[][50], string direction, int &eX, int &eY)
{
	eraseEnemy(maze, eX, eY);
	if (direction == "right")
	{
		eY = eY + 1;
	}

	if (direction == "left")
	{
		eY = eY - 1;
	}

	system("cls");

	printEnemy(maze, eX, eY);
	for (int i = 0; i < 50; i++)

	{
		for (int j = 0; j < 50; j++)
		{
			cout << maze[i][j];
		}

		cout << endl;
	}
}

void fire(char maze[][50], int &ix, int &iy)
{
	maze[ix][iy] = 'i';

}

void erasefire(char maze[][50], int &ix, int &iy)
{
	maze[ix][iy] = ' ';

}

void movefire(char maze[][50], int &ix, int &iy)
{
	erasefire(maze, ix, iy);

	ix = ix + 1;

	system("cls");

	fire(maze, ix, iy);
	for (int i = 0; i < 50; i++)

	{
		for (int j = 0; j < 50; j++)
		{
			cout << maze[i][j];
		}

		cout << endl;
	}
}